/**
 * Initialize the library. This basically loads the WebAssembly used by `work`.
 *
 * @returns Promise
 */
export declare function init(): Promise<void>;
/**
 * Get whether or not `work` is ready to be used ({@link #init} has been called).
 *
 * @returns Ready
 */
export declare function isReady(): boolean;
/**
 * Find a work value that meets the difficulty for the given hash.
 * Requires initialization.
 *
 * @param blockHash - The hash to find a work for
 * @param workerIndex - The current worker index, starting at 0
 * @param  workerCount - The count of worker
 * @returns Work, in hexadecimal format
 */
export declare function work(blockHash: string, workerIndex?: number, workerCount?: number): string | null;
/**
 * Validate whether or not the work value meets the difficulty for the given hash.
 * Does not require initialization.
 *
 * @param blockHash - The hash to validate the work against
 * @param work - The work to validate
 * @returns Valid
 */
export declare function validateWork(blockHash: string, work: string): boolean;
